@page
@model BloodDonationSystem.Pages.DonationRequest.Staff.ManageRequestsModel
@using BusinessObject.Entities.Enum
@{
    ViewData["Title"] = "Donation Requests";
    Layout = "~/Pages/Shared/Staff/_StaffLayout.cshtml"; 
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />
<link rel="stylesheet" href="~/css/staff/DonorRequestManager.css" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

<div class="container py-4">
    <h2 class="text-2xl font-bold mb-2">Donation Requests</h2>
    <p class="text-muted mb-4">Display all donation requests and manage them efficiently</p>

    <!-- Filter Section -->
    <div class="d-flex gap-2 mb-4">
        <form method="get" class="d-flex flex-wrap gap-2">
            <select name="bloodType" class="form-select">
                <option value="">All Blood Types</option>
                @foreach (var b in Model.BloodTypes)
                {
                <option value="@b" selected="@(Model.Filter.BloodType == b)">
                    @b
                </option>
                }
            </select>
            
            <input type="date" name="date" class="form-control"
                   value="@Model.Filter.Date?.ToString("yyyy-MM-dd")" />
            <button class="btn btn-outline-danger">Apply Filters</button>
        </form>
        
    </div>

    <!-- Tabs -->
    <ul class="nav nav-tabs mb-4">
        <li class="nav-item">
            <a class="nav-link @(Model.ActiveTab == "Pending" ? "active" : "")" asp-route-tab="Pending">
                <i class="fas fa-clock text-warning"></i> Pending
                <span class="badge bg-warning text-dark">@Model.PendingCount</span>
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link @(Model.ActiveTab == "Processed" ? "active" : "")" asp-route-tab="Processed">
                <i class="fas fa-check-circle text-success"></i> Processed
                <span class="badge bg-success">@Model.ProcessedCount</span>
            </a>
        </li>
    </ul>

    <!-- Table -->
    <table class="table table-hover table-bordered">
        <thead class="table-light">
        <tr>
            <th><input type="checkbox" /></th>
            <th>#</th>
            <th>Full Name</th>
            <th>Blood Type</th>
            
            <th>Date</th>
            <th>Time</th>
            <th>Amount</th>
            <th>Status</th>
            <th>Actions</th>
        </tr>
        </thead>
        <tbody>
        @if (Model.Requests.Count == 0)
        {
        <tr>
            <td colspan="10" class="text-center text-muted">
                <i class="fas fa-frown"></i> No requests found.
            </td>
        </tr>
        }
        else
        {
        int index = 1;
        foreach (var r in Model.Requests)
        {
        <tr>
            <td><input type="checkbox" name="selectedIds" value="@r.RequestId" /></td>
            <td>@index</td>
            <td>@r.User?.Name</td>
            <td><span class="badge bg-primary">@r.BloodType?.Name</span></td>
            <td>@r.RequestTime.LocalDateTime.ToString("dd/MM/yyyy")</td>
            <td>@r.RequestTime.LocalDateTime.ToString("HH:mm")</td>
            <td>@r.AmountBlood ml</td>
            <td>
                @switch (r.Status)
                {
                case DonationRequestStatus.Pending:
                <span class="badge bg-warning text-dark">Pending</span>; break;
                case DonationRequestStatus.Completed:
                <span class="badge bg-success">Completed</span>; break;
                case DonationRequestStatus.Cancelled:
                <span class="badge bg-danger">Cancelled</span>; break;
                default:
                <span class="badge bg-secondary">@r.Status</span>; break;
                }
            </td>
            <td>
                <a asp-page-handler="Detail" asp-route-id="@r.RequestId" class="btn btn-sm btn-info">
                    View
                </a>
                @if (r.Status == DonationRequestStatus.Pending)
                {
                    <button type="button" class="btn btn-sm btn-success" onclick="openModal('confirm', '@r.RequestId')">Confirm</button>
                    <button type="button" class="btn btn-sm btn-danger" onclick="openModal('fail', '@r.RequestId')">Reject</button>
                }
            </td>
        </tr>
        index++;
        }
        }
        </tbody>
    </table>
</div>
<!-- Confirmation Modal -->
<div class="modal fade" id="confirmModal" tabindex="-1" aria-labelledby="confirmModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="modalForm" method="post">
                <div class="modal-header">
                    <h5 class="modal-title" id="confirmModalLabel">Are you sure?</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" id="modalMessage">
                    <!-- Nội dung sẽ được cập nhật bằng JS -->
                </div>
                <input type="hidden" name="requestId" id="modalRequestId" />
                <input type="hidden" name="reason" id="modalReason" />
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary" id="modalSubmitBtn">Yes, proceed</button>
                </div>
            </form>
        </div>
    </div>
</div>
<script>
    function openModal(action, requestId) {
        const form = document.getElementById('modalForm');
        const requestIdInput = document.getElementById('modalRequestId');
        const reasonInput = document.getElementById('modalReason');
        const modalMessage = document.getElementById('modalMessage');
        const modalSubmitBtn = document.getElementById('modalSubmitBtn');

        requestIdInput.value = requestId;
        reasonInput.value = ""; // reset reason

        if (action === 'confirm') {
            form.action = '?handler=Confirm';
            modalMessage.textContent = 'Are you sure you want to confirm this request?';
            modalSubmitBtn.className = 'btn btn-success';
            modalSubmitBtn.textContent = 'Yes, Confirm';
        } else if (action === 'fail') {
            form.action = '?handler=Fail';
            modalMessage.textContent = 'Are you sure you want to reject this request?';
            modalSubmitBtn.className = 'btn btn-danger';
            modalSubmitBtn.textContent = 'Yes, Reject';
            reasonInput.value = "Rejected by staff";
        }

        const modal = new bootstrap.Modal(document.getElementById('confirmModal'));
        modal.show();
    }
</script>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.7/signalr.min.js"
            integrity="sha512-7SRCYIJtR6F8ocwW7UxW6wGKqbSyqREDbfCORCbGLatU0iugBLwyOXpzhkPyHIFdBO0K2VCu57fvP2Twgx1o2A=="
            crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/notificationHub")
            .build();

        connection.on("notify", function () {
            alert("new request has been created, please refresh the page to see the new request");
            window.location.href = "/DonationRequest/Staff/ManageRequest";
        });

        connection.start().catch(err => console.error(err));
    </script>
}


